// Generated by CoffeeScript 1.10.0
Zotero.BetterBibTeX.Test = new ((function() {
  var class1;

  function _Class() {
    return class1.apply(this, arguments);
  }

  class1 = _Class.status = [];

  _Class.prototype.run = function(tags) {
    var feature, featureParser, i, j, k, len, len1, ref, results, scenario, scenarios;
    this.library = new this.Library();
    scenarios = [];
    featureParser = new Yadda.parsers.FeatureParser();
    ref = Zotero.BetterBibTeX.Test.features;
    for (j = 0, len = ref.length; j < len; j++) {
      feature = ref[j];
      feature = Zotero.File.getContentsFromURL(feature);
      scenarios = scenarios.concat(featureParser.parse(feature).scenarios);
    }
    scenarios = (function() {
      var k, len1, results;
      results = [];
      for (k = 0, len1 = scenarios.length; k < len1; k++) {
        scenario = scenarios[k];
        if (this.withTags(scenario, tags)) {
          results.push(scenario);
        }
      }
      return results;
    }).call(this);
    this.status = (function() {
      var results;
      results = [];
      for (scenario in scenarios) {
        results.push({
          scenario: scenario,
          status: 'pending'
        });
      }
      return results;
    })();
    results = [];
    for (i = k = 0, len1 = scenarios.length; k < len1; i = ++k) {
      scenario = scenarios[i];
      results.push(Yadda.createInstance(this.library).run(scenario.steps, function(status) {
        if (status === void 0) {
          return this.status[i] = 'success';
        } else {
          return this.status[i] = 'fail';
        }
      }));
    }
    return results;
  };

  _Class.prototype.withTags = function(scenario, tags) {
    var j, len, tag;
    for (j = 0, len = tags.length; j < len; j++) {
      tag = tags[j];
      if (tag[0] === '~') {
        if (scenario.annotations.indexOf(tag.slice(1)) >= 0) {
          return false;
        }
      } else {
        if (scenario.annotations.indexOf(tag) < 0) {
          return false;
        }
      }
    }
    return true;
  };

  _Class.prototype.Library = (function() {
    function _Class() {
      var dictionary, wall;
      dictionary = new Yadda.Dictionary();
      wall = null;
      return Yadda.localisation.English.library(dictionary).given('$NUM green bottles are standing on the wall', (function(_this) {
        return function(number_of_bottles, next) {
          wall = new _this.Wall(number_of_bottles);
          return next();
        };
      })(this)).when('$NUM green bottle accidentally falls', function(number_of_falling_bottles) {
        return wall.fall(number_of_falling_bottles);
      }).then('there (?:are|are still) $NUM green bottles standing on the wall', function(number_of_bottles) {
        if (parseInt(number_of_bottles) === wall.bottles) {
          throw new Error('oops');
        }
      });
    }

    return _Class;

  })();

  return _Class;

})());
