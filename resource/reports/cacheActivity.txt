<html>
  <head>
    <title>Cache activity</title>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script>
      google.load('visualization', '1', {packages: ['corechart', 'bar']});

      google.setOnLoadCallback(loadData);

      function loadData() {
        if (location.search) {
          var url = location.search.slice(1);
          console.log('live data from ' + url);
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, true);
          xhr.onload = function (e) {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) {
                drawChart(JSON.parse(xhr.responseText));
              } else {
                console.error(xhr.statusText);
              }
            }
          };
          xhr.onerror = function (e) {
            console.error(xhr.statusText);
          };
          xhr.send(null);

        } else {
          console.log('dummy data');
          var acc = [0, 0, 0, 0, 0, 0];
          drawChart(Array.apply(null, Array(50 + parseInt(Math.random() * 200))).map(function(n, i) {
            acc = acc.map(function(v, col) {
              if (col == 2 || col == 5) { return v; }
              return v + parseInt(Math.random() * 100);
            });
            return [ 't' + i ].concat(acc);
          }));
        }
      }

      function compress(a, n) {
        var len = a.length,out = [], i = 0;
        while (i < len) {
          var size = Math.ceil((len - i) / n--);
          out.push(a[i]);
          i += size;
        }
        return out;
      }

      function drawChart(cacheHistory) {
        // compress to 100 datapoint
        cacheHistory = compress(cacheHistory, 100);

        // remove empty data series
        var remove = [];
        ['header', 'Serialized: Hits', 'Serialized: Misses', 'Serialized: Clears', 'Cache: Hits', 'Cache: Misses', 'Cache: Clears'].forEach(function(name, col) {
          if (col == 0 || cacheHistory.find(function(row) { return row[col] != 0; })) { return ; }
          remove.unshift(col);
        });

        if (remove.length == 6) {
          document.getElementById('chart_div').innerHTML = 'No cache activity';
          return;
        }

        var types = [ null, null, null, null, 'area', 'area', 'area' ];
        remove.forEach(function(col) {
          types.splice(col, 1);
        });
        var series = {}
        types.forEach(function(type, n) {
          if (type) {
            series[n - 1] = {type: type};
          }
        });
        console.log(types);
        console.log(series);

        cacheHistory = [[ 'timestamp', 'Serialized: Hits', 'Serialized: Misses', 'Serialized: Clears', 'Cache: Hits', 'Cache: Misses', 'Cache: Clears' ]].concat(cacheHistory);
        cacheHistory.forEach(function(row) {
          remove.forEach(function(col) {
            row.splice(col, 1);
          });
        });

        var data = google.visualization.arrayToDataTable(cacheHistory);

        var options = {
          isStacked: true,
          seriesType: 'bars',
          hAxis: {showTextEvery: parseInt(cacheHistory.length / 20)},
          series: series
        };

        var chart = new google.visualization.ComboChart(document.getElementById('chart_div'));

        chart.draw(data, options);
      };
    </script>
  </head>
  <body>
    <div style="height: 100%" id="chart_div"></div>
  </body>
</html>
